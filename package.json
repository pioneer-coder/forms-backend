{
  "name": "questionnaires-backend",
  "version": "0.0.0",
  "description": "backend of questionnaires microservice",
  "private": true,
  "type": "module",
  "scripts": {
    "prebuild": "rm -rf dist",
    "build": "cross-env NODE_OPTIONS=--max_old_space_size=4096 yarn run --silent tsc --project tsconfig.build.json && yarn tsc-alias --project tsconfig.build.json",
    "build:check": "cross-env NODE_OPTIONS=--max_old_space_size=4096 yarn run --silent tsc --skipLibCheck --noEmit",
    "build:devdotenv": "yarn run:ts --tsconfig tsconfig.just-configuration.json ./scripts/createDotEnv.ts --tier development --out .env.development",
    "build:qadotenv": "yarn run:ts --tsconfig tsconfig.just-configuration.json ./scripts/createDotEnv.ts --tier qa --out .env.qa",
    "build:productiondotenv": "yarn run:ts --tsconfig tsconfig.just-configuration.json ./scripts/createDotEnv.ts --tier production --out .env.production",
    "dev": "cross-env concurrently --handle-input --default-input-target dev:server:watch yarn:dev:server:watch",
    "dev:no-watch": "cross-env concurrently yarn:dev:server",
    "dev:server": "yarn tsx src/server/index.ts",
    "dev:server:watch": "yarn tsx watch src/server/index.ts",
    "dev:pg": "docker compose up postgres",
    "dev:pg:stop": "docker stop noodle-documents-pg || true ; docker container rm noodle-documents-pg || true ; docker image rm $(docker image list noodle-documents_dev -q) || true",
    "dev:docker": "docker compose up dev",
    "start": "node server/index.js",
    "checkenv:development": "yarn run:ts --tsconfig tsconfig.just-configuration.json ./scripts/createDotEnv.ts --tier development --out /tmp/.env.development.$$ && DOTENV_CONFIG_PATH=/tmp/.env.development.$$ tsx --tsconfig tsconfig.just-configuration.json ./src/configuration/index.ts",
    "checkenv:qa": "yarn run:ts --tsconfig tsconfig.just-configuration.json ./scripts/createDotEnv.ts --tier qa --out /tmp/.env.qa.$$ && DOTENV_CONFIG_PATH=/tmp/.env.qa.$$ tsx --tsconfig tsconfig.just-configuration.json ./src/configuration/index.ts",
    "checkenv:production": "yarn run:ts --tsconfig tsconfig.just-configuration.json ./scripts/createDotEnv.ts --tier production --out /tmp/.env.production.$$ && DOTENV_CONFIG_PATH=/tmp/.env.production.$$ tsx --tsconfig tsconfig.just-configuration.json ./src/configuration/index.ts",
    "lint:js": "eslint src .github scripts test *.js *.json .*.js .*.json --ext .js,.ts,.json --no-error-on-unmatched-pattern",
    "lint:js:changed": "eslint $(git diff --diff-filter=AMR --name-only --merge-base main | grep -e '.js$' -e '.ts'$ -e '.json$')",
    "lint:js:fix": "yarn lint:js --fix",
    "lint:yaml": "yamllint **/*.yml **/*.yaml --ignore=node_modules/**/*.yml --ignore=node_modules/**/*.yaml",
    "lint:sh": "cross-env ERROR_STATUS=0 ; for file in $(find . -type f \\( -iname \"*.sh\" \\) -not -path './node_modules/*' -not -path './.husky/_/*'); do GITHUB_TOKEN= yarn run shellcheck -x $file || ERROR_STATUS=$?; done; exit $ERROR_STATUS",
    "test": "cross-env NODE_OPTIONS=--max_old_space_size=4096 TS_NODE_TRANSPILE_ONLY=true TS_NODE_FILES=true DOTENV_CONFIG_PATH=.env.test NODE_ENV=test yarn run --silent mocha --esm --config test/.mocharc.all.cjs",
    "test:watch": "yarn run --silent test --watch",
    "run:ts": "cross-env NODE_OPTIONS='--require tsconfig-paths/register' yarn run --silent tsx",
    "pg:migration:create": "yarn typeorm-ts-node-esm migration:create",
    "postpg:migration:create": "yarn run eslint --fix src/dbs/typeorm/migrations",
    "pg:migration:run": "yarn typeorm-ts-node-esm migration:run --dataSource ./src/dbs/typeorm/dataSource.js",
    "pg:migration:revert": "yarn typeorm-ts-node-esm migration:revert --dataSource ./src/dbs/typeorm/dataSource.js",
    "pg:test:migration:run": "cross-env DOTENV_CONFIG_PATH=.env.test yarn typeorm-ts-node-esm migration:run --dataSource ./src/dbs/typeorm/dataSource.js",
    "pg:test:migration:revert": "cross-env DOTENV_CONFIG_PATH=.env.test yarn typeorm-ts-node-esm migration:revert --dataSource ./src/dbs/typeorm/dataSource.js",
    "pg:cli": "psql $(./scripts/postgres/create-uri.sh)",
    "pg:test:cli": "psql $(DOTENV_CONFIG_PATH=.env.test ./scripts/postgres/create-uri.sh)",
    "pg:recreate": "./scripts/postgres/recreate.sh",
    "pg:test:recreate": "cross-env DOTENV_CONFIG_PATH=.env.test ./scripts/postgres/recreate.sh"
  },
  "author": "mikael@noodle.shop",
  "dependencies": {
    "@faker-js/faker": "^8.4.1",
    "@sentry/node": "^8.8.0",
    "@sentry/profiling-node": "^8.8.0",
    "axios": "^1.7.2",
    "bluebird": "^3.7.2",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "dayjs": "^1.11.11",
    "dotenv": "^16.4.5",
    "emittery": "^1.0.3",
    "escape-html": "^1.0.3",
    "express": "^4.19.2",
    "glob": "^10.3.15",
    "helmet": "^7.1.0",
    "jsonwebtoken": "^9.0.2",
    "lodash": "^4.17.21",
    "nanoid": "^5.0.7",
    "nocache": "^4.0.0",
    "pg": "^8.11.5",
    "pino": "^9.1.0",
    "pino-http": "^10.1.0",
    "slate": "^0.103.0",
    "typeorm": "^0.3.20",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@types/bluebird": "^3.5.42",
    "@types/chai": "^4.3.16",
    "@types/cookie-parser": "^1.4.7",
    "@types/cors": "^2.8.17",
    "@types/dirty-chai": "^2.0.4",
    "@types/escape-html": "^1.0.4",
    "@types/express": "^4.17.21",
    "@types/jsonwebtoken": "^9.0.6",
    "@types/lodash": "^4.17.1",
    "@types/mocha": "^10.0.6",
    "@types/node": "18",
    "@types/semver": "^7.5.8",
    "@types/sinon": "^17.0.3",
    "@types/sinon-chai": "^3.2.12",
    "@types/yargs": "^17.0.32",
    "@typescript-eslint/eslint-plugin": "^7.10.0",
    "@typescript-eslint/parser": "^7.10.0",
    "aws-sdk": "^2.1625.0",
    "chai": "^5.1.1",
    "chai-as-promised": "^7.1.2",
    "chai-shallow-deep-equal": "^1.4.6",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "crossenv": "^0.0.2-security",
    "eslint": "^8.2.0",
    "eslint-config-airbnb": "19.0.4",
    "eslint-import-resolver-typescript": "^3.6.1",
    "eslint-plugin-chai-friendly": "^0.7.4",
    "eslint-plugin-filenames": "^1.3.2",
    "eslint-plugin-import": "^2.25.3",
    "eslint-plugin-json": "^3.1.0",
    "eslint-plugin-jsx-a11y": "^6.5.1",
    "eslint-plugin-mocha": "^10.4.3",
    "eslint-plugin-react": "^7.28.0",
    "eslint-plugin-react-hooks": "^4.3.0",
    "eslint-plugin-sort-exports": "^0.9.1",
    "eslint-plugin-sort-keys-fix": "^1.1.2",
    "eslint-plugin-you-dont-need-lodash-underscore": "^6.14.0",
    "mocha": "^10.4.0",
    "semver": "^7.6.2",
    "shellcheck": "^2.2.0",
    "sinon": "^17.0.1",
    "sinon-chai": "^3.7.0",
    "ts-node": "^10.9.2",
    "tsc-alias": "^1.8.10",
    "tsx": "^4.10.5",
    "typescript": "^5.4.5",
    "yaml-lint": "^1.7.0",
    "yargs": "^17.7.2"
  }
}
